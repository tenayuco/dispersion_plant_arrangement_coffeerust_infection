datosEsporasBoud <-read.csv("sporesBoudrot.csv")
datosRainBoud<- aggregate(datosRainBoud$Precipitation..mm., by = list(datosRainBoud$Day), max) #como la base de datos esta sucia por el web plot desing, hay que solo agarrar los valore mas altos)
datosRainBoud <-head(datosRainBoud, -1)
datosRainBoud <-tail(datosRainBoud, -1)
names(datosRainBoud)<-c("Day","dailyPP")
datosRainBoud$Day <- as.integer(datosRainBoud$Day)
datosRainBoud <- datosRainBoud %>% group_by(Day) %>%
summarise(dailyPP=mean(dailyPP))
datosRainBoud$month <- (as.integer((datosRainBoud$Day/30))*30)+15 #asi se le pone el mes
#PAra hacerlo mensual.. (menos preciso, pero permite comparar)
datosAg_RainBoud <- datosRainBoud %>% group_by(month) %>%
summarise(sumPP=sum(dailyPP))
#coeff_h<- max(datosBeckSP1$V2)/max(datosBeckerRain$Precipitation)
coeff_A <- max(datosAg_RainBoud$sumPP)/max(datosEsporasBoud$Spore)
p_Boud<-ggplot() +
geom_bar(data=datosAg_RainBoud, aes(x=datosAg_RainBoud$month, y=datosAg_RainBoud$sumPP/coeff_A), stat="identity", fill=mycols[3], width=30, color=mycols[3], alpha= 0.5)+
geom_line(data=datosEsporasBoud, aes(x=Day, y=Spore), size= 1)+
geom_segment(aes(x = datosAg_RainBoud$month[1], y =  -4, xend =  datosAg_RainBoud$month[1]+365, yend =  -4), color= "darkgreen", size= 1) +
# geom_segment(aes(x = datosAg_RainBoud$month[1]+365, y =  -4, xend = tail(datosAg_RainBoud$month,1) , yend =  -4), color= "darkgray", size= 1) +
scale_y_continuous(
name = "Spores/Tree (x 10000)",
sec.axis = sec_axis(trans= ~.*coeff_A, name = "") #voy a quitar rainfall para que no se grafique
) +
theme_bw()+
theme(text = element_text(size=12), plot.title = element_text(size=10))+
#theme(panel.background = element_rect(fill = NA, colour = "#359B32", size = 1, linetype = "solid")) +
geom_point(data=datosEsporasBoud, aes(x=Day, y=Spore), size= 1)+
labs(x= "",title = "Turrialba, Costa Rica, 2006")
# ggsave("~/Desktop/archivosTrabajandose_aborrar/imageCandidatura/boudrotSinlluvia.png", height = 3, width = 3, device = "png")
#theme_minimal()
#https://www.r-graph-gallery.com/line-chart-dual-Y-axis-ggplot2.html
datosAg_RainBoud
View(datosAg_RainBoud)
View(datosEsporasBoud)
datosAvelinoSpore<- read.csv("avelinoSporeGuatemala.csv", header=TRUE)
datosAvelinoRain<- read.csv("avelinoRainGuatemala.csv", header=TRUE)
datosAvelinoHarvest <- read.csv("avelinoHarvestGuatemala.csv", header=TRUE)
datosAvelinoRain$month <- (as.integer((datosAvelinoRain$Dias/30))*30)+15
datosAvelinoRainAg <- datosAvelinoRain %>% group_by(month) %>%
summarise(sumPP=sum(Precipitation..mm.))
#datosAvelinoSpore$Porcentaje.Hoja <- datosAvelinoSpore$Porcentaje.Hoja*10
coeff_D<- max(datosAvelinoRainAg$sumPP)/max(datosAvelinoSpore$Porcentaje.Hoja)
p_Ave_Gua<-ggplot()+
geom_bar(alpha= 0.5, stat="identity", fill=mycols[3], color=mycols[3], width=30, data= datosAvelinoRainAg, aes(x=datosAvelinoRainAg$month , y=datosAvelinoRainAg$sumPP/coeff_D)) +
geom_line(data= datosAvelinoSpore, aes(x=datosAvelinoSpore$Dias , y=datosAvelinoSpore$Porcentaje.Hoja), size= 1)+
geom_segment(aes(x = datosAvelinoRainAg$month[1], y =  -2, xend =  datosAvelinoRainAg$month[1]+365, yend =  -2), color= "darkgreen", size= 1) +
# geom_segment(aes(x = datosAvelinoRainAg$month[1]+365, y =  -2, xend = tail(datosAvelinoRainAg$month,1) , yend =  -2), color= "darkgray", size= 1) +
labs(x= "", title = "Quetzaltenango, Guatemala, 1993")+
scale_y_continuous(
name = "Rusted leaves (%)",
sec.axis = sec_axis(~.*coeff_D, name = ""))+
geom_segment(aes(x = datosAvelinoHarvest$Day[1], y =  25, xend =  datosAvelinoHarvest$Day[2], yend =  25), color= mycols[6], size= 1.5) +
geom_segment(aes(x = datosAvelinoHarvest$Day[3], y =  25, xend =  datosAvelinoHarvest$Day[4], yend =  25), color= mycols[6], size= 1.5) +
theme_bw()+
theme(text = element_text(size=12), plot.title = element_text(size=10))+
#theme(panel.background = element_rect(fill = NA, colour = "#359B32", size = 1, linetype = "solid"))+
geom_point(data= datosAvelinoSpore, aes(x=datosAvelinoSpore$Dias , y=datosAvelinoSpore$Porcentaje.Hoja), size= 1)
#theme_minimal()
#www.sthda.com/english/wiki/ggplot2-add-straight-lines-to-a-plot-horizontal-vertical-and-regression-lines
View(datosAg_RainBoud)
View(datosAvelinoHarvest)
View(datosAvelinoRain)
View(datosAvelinoRainAg)
View(datosAvelinoHarvest)
View(datosAvelinoSpore)
dim(datosAvelinoSpore)
sporesDIF <- diff(datosAvelinoSpore$Porcentaje.Hoja)
sporesDIF
timeDIF
timeDIF <- diff(datosAvelinoSpore$Dias)
timeDIF
sporesDIF <- c(0, sporesDIF)
timeDIF <- c(0, timeDIF)
sporesDIF <- diff(datosAvelinoSpore$Porcentaje.Hoja)
timeDIF <- diff(datosAvelinoSpore$Dias)
sporesDIF <- c(0, sporesDIF)
timeDIF <- c(1, timeDIF)
datosAvelinoSpore$SLOPE <- sporesDIF/timeDIF
plot(datosAvelinoSpore$SLOPE)
plot(datosAvelinoSpore$SLOPE)
plot(datosAvelinoSpore$Dias, datosAvelinoSpore$SLOPE)
plot(datosAvelinoSpore$Dias, datosAvelinoSpore$SLOPE)
datosFig_Espacio
View(datosFig_Espacio)
datosAvelinoSpore$sporesDIF <- sporesDIF
datosAvelinoSpore$timeDIF <- timeDIF
sporesDIF <- diff(datosAvelinoSpore$Porcentaje.Hoja)/100 # para ponerlo igua que simuacion
timeDIF <- diff(datosAvelinoSpore$Dias)
sporesDIF <- c(0, sporesDIF)
timeDIF <- c(1, timeDIF)
datosAvelinoSpore$sporesDIF <- sporesDIF
datosAvelinoSpore$timeDIF <- timeDIF
datosAvelinoSpore$SLOPE <- sporesDIF/timeDIF
serieDerivas
serieTiempoGeneral3
0.001
1*10-3
1*(10**-3)
serieDerivas
serieDerivas <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=slope, linetype=as.factor(Iini)), color="darkred")+
#  geom_ribbon(aes(ymin = I_prom - 0.05, ymax = I_prom + 0.05, fill=as.factor(Iini)), alpha=0.3) +
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
geom_segment(aes(x = 0, y =  0.001, xend = 300, yend =  0.001), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieDerivas
serieTiempoGeneral3
serieDerivas
serieTiempoGeneral3
serieDerivas <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=slope, linetype=as.factor(Iini)), color="darkred")+
#  geom_ribbon(aes(ymin = I_prom - 0.05, ymax = I_prom + 0.05, fill=as.factor(Iini)), alpha=0.3) +
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
geom_segment(aes(x = 0, y =  0.0005, xend = 300, yend =  0.001), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieDerivas
serieDerivas <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=slope, linetype=as.factor(Iini)), color="darkred")+
#  geom_ribbon(aes(ymin = I_prom - 0.05, ymax = I_prom + 0.05, fill=as.factor(Iini)), alpha=0.3) +
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
geom_segment(aes(x = 0, y =  0.0005, xend = 300, yend =  0.0005), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieDerivas
serieTiempoGeneral3
serieDerivas
serieTiempoGeneral3
serieDerivas
serieDerivas <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=slope, linetype=as.factor(Iini)), color="darkred")+
#  geom_ribbon(aes(ymin = I_prom - 0.05, ymax = I_prom + 0.05, fill=as.factor(Iini)), alpha=0.3) +
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
geom_segment(aes(x = 0, y =  0.001, xend = 300, yend =  0.001), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieDerivas
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data/")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dGEN_rain <- dBoud_rain
dGEN_rust <-  dBoud_rust
rm(dBoud_rain)
rm(dBoud_rust)
seq(1,4)
length(dGEN_rust)
dim(dGEN_rust)
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(0, dim(dBoud_rust[1]))
seq(0,2)
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(0, dim(dBoud_rust)[1])
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(1, dim(dBoud_rust)[1])
dGEN_rain <- dBoud_rain
dGEN_rust <-  dBoud_rust
rm(dBoud_rain)
rm(dBoud_rust)
View(dGEN_rust)
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data/")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(1, dim(dBoud_rust)[1])
dGEN_rain <- dBoud_rain
dGEN_rust <-  dBoud_rust
rm(dBoud_rain)
rm(dBoud_rust)
dBecker_rust<- read.csv("data/Becker_rust.csv", header=TRUE)
dBecker_rust <- dBecker_rust %>% select(Day, "Rust"= Spore.1.25.m)#orale, asi puedes se
dBecker_rust <-dBecker_rust[complete.cases(dBecker_rust), ]
dBecker_rust$Rust <- dBecker_rust$Rust/1000  #para graficar
dBecker_rain<- read.csv("data/rainKeniaEast.csv", header=TRUE)
#datosBeckerRain$Precipitation <- datosBeckerRain$Precipitation*10
dBecker_rain$ID <- "BECK"
dBecker_rust$ID <- "BECK"
dBecker_rust$UNIT <- "Spores catch/day (x1000)"
dBecker_rust$PASO <- seq(1, dim(dBecker_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dBecker_rain)
dGEN_rust <- bind_rows(dGEN_rust, dBecker_rust)
rm(dBecker_rain)
rm(dBecker_rust)
dBock_rust<- read.csv("data/Bock192_rust.csv", header=TRUE)
dBock_rain<- read.csv("data/Bock1962_rain.csv", header=TRUE)
dBock_rain$PP.mm <- dBock_rain$PP.in * 25.4 ### inches to mm
dBock_rain <- dBock_rain %>% select(Day, PP.mm)
dBock_rain <- dBock_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))  #with this we remove all errors.
dBock_rain$Day <- as.integer(dBock_rain$Day) #an here we summarize per day
dBock_rain <- dBock_rain %>% group_by(Day) %>%
summarise(PP.mm= mean(PP.mm))
dBock_rain$AvDay<- (as.integer((dBock_rain$Day/30))*30)+15  #now we create the average day
dBock_rain <- dBock_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBock_rain$ID <- "BOCK"
dBock_rust$ID <- "BOCK"
dBock_rust$UNIT <- "No rust spot/leaf"
dBock_rust$PASO <- seq(1, dim(dBock_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dBock_rain)
dGEN_rust <- bind_rows(dGEN_rust, dBock_rust)
rm(dBock_rain)
rm(dBock_rust)
dAvelinoGua_rust<- read.csv("data/AvelinoGuatemala_rust.csv", header=TRUE)
dAvelinoGua_rain<- read.csv("data/AvelinoGuatemala_rain.csv", header=TRUE)
dAvelinoGua_harvest <- read.csv("data/AvelinoGuatemala_harvest.csv", header=TRUE)
dAvelinoGua_rain$AvDay <- (as.integer((dAvelinoGua_rain$Day/30))*30)+15
dAvelinoGua_rain <- dAvelinoGua_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dAvelinoGua_rain$ID <- "AVE_GUA"
dAvelinoGua_rust$ID <- "AVE_GUA"
dAvelinoGua_harvest$ID <- "AVE_GUA"
dAvelinoGua_rust$UNIT <- "Rusted leaves (%)"
dAvelinoGua_rust$PASO <- seq(1, dim(dAvelinoGua_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dAvelinoGua_rain)
dGEN_rust <- bind_rows(dGEN_rust, dAvelinoGua_rust)
rm(dAvelinoGua_rain)
rm(dAvelinoGua_rust)
dAnan_rust <- read.csv("data/Ananth_rust.csv")
dAnan_rain <- bind_rows(read_csv("data/Ananth_rain1.csv"), read_csv("data/Ananth_rain2.csv"))
dAnan_rain$Day <- as.integer(dAnan_rain$Day)
dAnan_rain$PP.mm <- dAnan_rain$PP.in*25.4
dAnan_rain <- dAnan_rain %>% select(Day, PP.mm)
dAnan_rain <- dAnan_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))  #with this we remove all errors.
dAnan_rain <- dAnan_rain[dAnan_rain$PP.mm <70,] #clean spurious values
dAnan_rain  <- dAnan_rain[dAnan_rain$PP.mm >0,]
`%notin%` <- Negate(`%in%`)
dAnan_rain<-dAnan_rain[dAnan_rain$Day %notin% c(30,61, 121, 244, 305, 335), ]  #lines
dAnan_rain$AvDay <-(as.integer((dAnan_rain$Day/30))*30)+15
dAnan_rain <- dAnan_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dAnan_rain$ID <- "ANAN"
dAnan_rust$ID <- "ANAN"
dAnan_rust$UNIT <- "Rusted leaves (%)"
dAnan_rust$PASO <- seq(1, dim(dAnan_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dAnan_rain)
dGEN_rust <- bind_rows(dGEN_rust, dAnan_rust)
rm(dAnan_rain)
rm(dAnan_rust)
#dMuli_leaves<- read.csv("data/mulingeLeaves.csv", header=TRUE)
#datosMulingeLeaves$Number.Leaves_per<-(datosMulingeLeaves$Number.Leaves/20)*100
dMuli_rain<- read.csv("data/Mulinge_rain.csv", header=TRUE)
dMuli_rust<- read.csv("data/Mulinge_rust.csv", header=TRUE)
dMuli_rain$AvDay <- as.integer(dMuli_rain$AvDay)
dMuli_rain$ID <- "MULI"
dMuli_rust$ID <- "MULI"
dMuli_rust$UNIT <- "Rusted leaves (%)"
dMuli_rust$PASO <- seq(1, dim(dMuli_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dMuli_rain)
dGEN_rust <- bind_rows(dGEN_rust, dMuli_rust)
rm(dMuli_rain)
rm(dMuli_rust)
dAveTapa_rust <- read.csv("data/AvelinoTapa_rust.csv", header = TRUE)
dAveTapa_rain <- read.csv("data/AvelinoTapa_rain.csv", header = TRUE)
dAveTapa_harvest <- read.csv("data/AvelinoTapa_harvest.csv", header = TRUE)
dAveTapa_rain$ID <- "AVE_TAPA"
dAveTapa_rust$ID <- "AVE_TAPA"
dAveTapa_rust$UNIT <- "Rusted leaves (%)"
dAveTapa_harvest$ID <- "AVE_TAPA"
dAveTapa_rust$PASO <- seq(1, dim(dAveTapa_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dAveTapa_rain)
dGEN_rust <- bind_rows(dGEN_rust, dAveTapa_rust)
rm(dAveTapa_rain)
rm(dAveTapa_rust)
dVanLong_rust <- read.csv("data/VandermeerLong_rust.csv", header = TRUE)
dVanLong_rain <- read.csv("data/VandermeerLong_rain.csv", header = TRUE)
dVanShort_rust <- read.csv("data/VandermeerShort_rust.csv", header = TRUE)
dVanShort_rust <- dVanShort_rust %>% select(Day, "Rust"= Rust1)
dVanShort_rain <- dVanLong_rain[(dVanLong_rain$AvDay>896)&(dVanLong_rain$AvDay<1079),]
dVanLong_rain$ID <- "VAN_LON"
dVanLong_rust$ID <- "VAN_LON"
dVanLong_rust$UNIT <- "Rusted leaves (%)"
dVanLong_rust$PASO <- seq(1, dim(dVanLong_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dVanLong_rain)
dGEN_rust <- bind_rows(dGEN_rust, dVanLong_rust)
rm(dVanLong_rain)
rm(dVanLong_rust)
dVanShort_rain$ID <- "VAN_SHO"
dVanShort_rust$ID <- "VAN_SHO"
dVanShort_rust$UNIT <- "Rusted leaves (%)"
dVanShort_rust$PASO <- seq(1, dim(dVanShort_rust)[1])
dGEN_rain <- bind_rows(dGEN_rain, dVanShort_rain)
dGEN_rust <- bind_rows(dGEN_rust, dVanShort_rust)
rm(dVanShort_rain)
rm(dVanShort_rust)
dGEN_rust_slope <- dGEN_rust %>% filter(UNIT == "Rusted leaves (%)")
RustDIF <- diff(dGEN_rust_slope$Rust)/100 # para ponerlo igua que simuacion
DayDIF <- diff(dGEN_rust_slope$Day)
RustDIF <- c(0, RustDIF)
DayDIF <- c(1, DayDIF)
dGEN_rust_slope$RustDIF <- RustDIF
dGEN_rust_slope$DayDIF <- DayDIF
dGEN_rust_slope$SLOPE <- RustDIF/DayDIF
dGEN_rust_slope$RustDIF[dGEN_rust_slope$PASO == 0] <- 0
dGEN_rust_slope$DayDIF[dGEN_rust_slope$PASO == 0] <- 1
dGEN_rust_slope <- dGEN_rust %>% filter(UNIT == "Rusted leaves (%)")
RustDIF <- diff(dGEN_rust_slope$Rust)/100 # para ponerlo igua que simuacion
DayDIF <- diff(dGEN_rust_slope$Day)
RustDIF <- c(0, RustDIF)
DayDIF <- c(1, DayDIF)
dGEN_rust_slope$RustDIF <- RustDIF
dGEN_rust_slope$DayDIF <- DayDIF
dGEN_rust_slope$SLOPE <- RustDIF/DayDIF
dGEN_rust_slope$RustDIF[dGEN_rust_slope$PASO == 1] <- 0
dGEN_rust_slope$DayDIF[dGEN_rust_slope$PASO == 1] <- 1
dGEN_rust_slope$SLOPE[dGEN_rust_slope$PASO == 1] <- 1
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(1, dim(dBoud_rust)[1])
dGEN_rain <- dBoud_rain
dGEN_rust <-  dBoud_rust
rm(dBoud_rain)
rm(dBoud_rust)
#we open the data directly from the webplotdesing
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$AvDay  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dBoud_rain <- dBoud_rain %>% group_by(AvDay) %>%
summarise(PP.mm=sum(PP.mm))
dBoud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
dBoud_rust$UNIT <- "Spores/Tree (x 10000)"
dBoud_rust$PASO <- seq(1, dim(dBoud_rust)[1])
dGEN_rain <- dBoud_rain
dGEN_rust <-  dBoud_rust
rm(dBoud_rain)
rm(dBoud_rust)
