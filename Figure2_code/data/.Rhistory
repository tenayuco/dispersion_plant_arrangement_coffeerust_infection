datos_rustAnan
datosVanIr_largo_rust$ID <- "VANLAR"
datosMulinge_rust <- datosMulingeLeaves %>% select(DayRust, Rust) %>%
mutate(ID = "MUL")
datosAvelinoSpore$ID <- "AVEGUA"
datos_rustAnan$ID <-"ANAN"
datosAveTapaSpore$ID <- "AVETAPA"
datosVanIr_corto_rust1 <- datosVanIr_corto_rust %>% select(Day, Rust1) %>%
mutate(ID = "VANCOR")
bigData_time <- rbind(datosVanIr_largo_rust,datosMulinge_rust, datosAvelinoSpore, datos_rustAnan, datosAveTapaSpore, datosVanIr_corto_rust1)
names(datosVanIr_largo_rust)
names(datosMulinge_rust)
names(datosMulinge_rust)[1]
names(datosAvelinoSpore)
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/bases de Datos lluvias y scripts R/")
#abrimos una base de datos
datosRainBoud<- read.csv("rainBoudrot.csv")
datosEsporasBoud <-read.csv("sporesBoudrot.csv")
datosRainBoud<- aggregate(datosRainBoud$Precipitation..mm., by = list(datosRainBoud$Day), max) #como la base de datos esta sucia por el web plot desing, hay que solo agarrar los valore mas altos)
datosRainBoud <-head(datosRainBoud, -1)
datosRainBoud <-tail(datosRainBoud, -1)
names(datosRainBoud)<-c("Day","dailyPP")
datosRainBoud$Day <- as.integer(datosRainBoud$Day)
datosRainBoud <- datosRainBoud %>% group_by(Day) %>%
summarise(dailyPP=mean(dailyPP))
datosRainBoud$month <- (as.integer((datosRainBoud$Day/30))*30)+15 #asi se le pone el mes
#PAra hacerlo mensual.. (menos preciso, pero permite comparar)
datosAg_RainBoud <- datosRainBoud %>% group_by(month) %>%
summarise(sumPP=sum(dailyPP))
View(datosAg_RainBoud)
View(datosEsporasBoud)
View(datosRainBoud)
View(datosAg_RainBoud)
datosBecker<- read.csv("beckersp1Sp2.csv", header=TRUE)
datosBeckSP1 <- as.data.frame(cbind(datosBecker$dias.consenso, datosBecker$Spore.1.25.m))
datosBeckSP1 <-datosBeckSP1[complete.cases(datosBeckSP1), ]
datosBeckSP2 <- as.data.frame(cbind(datosBecker$dias.consenso, datosBecker$Spore.2.5.m))
datosBeckSP2 <-datosBeckSP2[complete.cases(datosBeckSP2), ]
datosBeckerRain<- read.csv("rainKeniaEast.csv", header=TRUE)
#datosBeckerRain$Precipitation <- datosBeckerRain$Precipitation*10
datosBeckSP1$V2 <-datosBeckSP1$V2/1000
datosBockSpores<- read.csv("sporesKenia_bock1962.csv", header=TRUE)
datosBockRain<- read.csv("RainKenia_bock1962_2.csv", header=TRUE)
names(datosBockRain)<-c("Dias","PP_in")
datosBockRain$PP_mm<- datosBockRain$PP_in *25.4
#datosBockRain<- as.data.frame(cbind(datosBockRain$Dias, datosBockRain$`Precipitacion (mm)`))
#names(datosBockRain)<-c("Dias","Precipitacion (mm)")
datosBockRain<- aggregate(datosBockRain$PP_mm, by = list(datosBockRain$Dias), max)
names(datosBockRain)<-c("Day","PP_mm")
datosBockRain$Day <- as.integer(datosBockRain$Day)
datosBockRain <- datosBockRain %>% group_by(Day) %>%
summarise(PP_mm=mean(PP_mm))
datosBockRain$month <- (as.integer((datosBockRain$Day/30))*30)+15
datosBockRainAg <- datosBockRain %>% group_by(month) %>%
summarise(sumPP=sum(PP_mm))
datosRainBoud<- read.csv("rainBoudrot.csv")
datosEsporasBoud <-read.csv("sporesBoudrot.csv")
View(datosRainBoud)
names(datosRainBoud)
datosRainBoud<- read.csv("rainBoudrot.csv")
datosEsporasBoud <-read.csv("sporesBoudrot.csv")
#as the data base for rain is pretty noisy, we only took the maximum values
datosRainBoud<- aggregate(datosRainBoud$Precipitation..mm., by = list(datosRainBoud$Day), max)
datosRainBoud <-head(datosRainBoud, -1)
datosRainBoud$Day <- as.integer(datosRainBoud$Day)
datosRainBoud<- read.csv("rainBoudrot.csv")
datosEsporasBoud <-read.csv("sporesBoudrot.csv")
#as the data base for rain is pretty noisy, we only took the maximum values
datosRainBoud<- aggregate(datosRainBoud$Precipitation..mm., by = list(datosRainBoud$Day), max)
datosRainBoud <-head(datosRainBoud, -1)
datosRainBoud <-tail(datosRainBoud, -1)
datosRainBoud$Day <- as.integer(datosRainBoud$Day)
datosRainBoud<- read.csv("rainBoudrot.csv")
datosEsporasBoud <-read.csv("sporesBoudrot.csv")
#as the data base for rain is pretty noisy, we only took the maximum values
datosRainBoud<- aggregate(datosRainBoud$Precipitation..mm., by = list(datosRainBoud$Day), max)
datosRainBoud <-head(datosRainBoud, -1)
datosRainBoud <-tail(datosRainBoud, -1)
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainSporesFile//")
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile//")
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data")
dBoud_rain<- read.csv("Boudrot_rain.csv")
library(ggplot2)
library(tidyverse)
#install.packages('patchwork')
library(patchwork)
library(ggthemes)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data/")
dBoud_rain<- read.csv("Boudrot_rain.csv")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data/")
dBoud_rain<- read.csv("Boudrot_rain.csv")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/data/")
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/rainRustFile/")
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(Day <- max(PP.mm))
View(dBoud_rain)
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(Day = max(PP.mm))
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
#as the data base for rain is pretty noisy, we only took the maximum values
dBoud_rain<- aggregate(dBoud_rain$PP.mm, by = list(datosRainBoud$Day), max)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
#as the data base for rain is pretty noisy, we only took the maximum values
dBoud_rain<- aggregate(dBoud_rain$PP.mm, by = list(dBoud_rain$Day), max)
View(dBoud_rain)
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
View(dBoud_rain)
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day) %>%
summarise(monthlyPP=mean(PP.mm))
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain<- read.csv("data/Boudrot_rain.csv")
dBoud_rust <-read.csv("data/Boudrot_rust.csv")
#as the data base for rain is pretty noisy, we only took the maximum values and remove the first and last value that correpond to the axis
dBoud_rain$Day <- as.integer(dBoud_rain$Day)
dBoud_rain <- dBoud_rain %>% group_by(Day)%>%
summarise(PP.mm = max(PP.mm))
dBoud_rain <-head(dBoud_rain, -1)
dBoud_rain <-tail(dBoud_rain, -1)
dBoud_rain$month  <- (as.integer((dBoud_rain$Day/30))*30)+15 #asi se le pone el mes
dAg_Boud_rain <- dBoud_rain %>% group_by(month) %>%
summarise(PP=sum(PP.mm))
View(dAg_Boud_rain)
dAg_Boud_rain$ID <- "BOUD"
dBoud_rust$ID <- "BOUD"
View(dBoud_rust)
datosBecker<- read.csv("beckersp1Sp2.csv", header=TRUE)
datosBecker<- read.csv("data/beckersp1Sp2.csv", header=TRUE)
datosBecker
dBecker_rust<- read.csv("data/Becker_rust.csv", header=TRUE)
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
library(ggplot2)
library(patchwork)
library(tidyverse)
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/")
datosFig_Espacio <- read.csv("datosPromediosJuntos3.csv")
#add an ID per simulations  (990 IDs)
datosFig_Espacio$ID <- rep(1:990, each= 602)  # 602 is the number of steps per simulations after the filter
###transform steps to days
datosFig_Espacio$X <- datosFig_Espacio$X*0.01
#remove the middle value of Iini and low value of g (not used)
datosFig_Espacio <- datosFig_Espacio %>%
filter(!(Iini==0.010)) %>%
filter(g == 0.015)  %>%
# filter(g== 0.056) ##SOLO PARA EL SUPLEMENTARIO
#remove the middle value of Iini and low value of g (not used)
datosFig_Espacio <- datosFig_Espacio %>%
filter(!(Iini==0.010)) %>%
filter(g == 0.015)
#obtain the  maximum values of each serie, according to the ID
datosMax<- datosFig_Espacio %>% group_by(g,m, Iini, sim, patron, Dc, ID) %>%
summarise_all(max)
#subselct in the general data frame rows that contain these maximum values. This procedure works since the values have mutiple decimals, and we don't have to simulations with the exact same value
dgInf <- datosFig_Espacio[datosFig_Espacio$I_prom %in% datosMax$I_prom, ]
dgInf<- dgInf %>% select(!c(S_prom,S_sd,X_prom,X_sd, I_sd))
#we know merge siimulatons per pattern to summarise the random simulations and have an average and a standard deviation, only for that planting pattern
dgInf_ave <- dgInf  %>% group_by(g,m, Iini, patron) %>%
summarise(meanDc= mean(Dc), sdDc= sd(Dc), meanImax=mean(I_prom), sdImax= sd(I_prom),meanTime=mean(X), sdTime= sd(X) )
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
#ggsave("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/finales/serieTiempo3.png", height = 7, width = 10)
serieTiempoGeneral3
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.7) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.4) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
#  filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a)+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
#theme_bw()+
theme_grey()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
serieTiempoGeneral3
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
#theme_grey()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
ggsave("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/finales/serieTiempo3.png", height = 7, width = 10)
datosFig_Espacio$m[datosFig_Espacio$m == "0.001"] <- " Low diffusion rate" # le pongo un espacio de más para el orden final de la figura
datosFig_Espacio$m[datosFig_Espacio$m == "0.01"] <- "High diffusion rate"
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
#theme_grey()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
ggsave("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/finales/serieTiempo3.png", height = 7, width = 10)
serieTiempoGeneral3
mycols <- c("#021128","#1b4a64", "#3585a0", "#759580", "#c78f34", "#fd9706","#fdb81c","#fbdb30")
mycols3a <-c("#021128", "#fd9706", "#3585a0")
mycols3b <-c("#1b4a64", "#fdb81c", "#759580")
library(ggplot2)
library(patchwork)
library(tidyverse)
setwd("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/")
datosFig_Espacio <- read.csv("datosPromediosJuntos3.csv")
#add an ID per simulations  (990 IDs)
datosFig_Espacio$ID <- rep(1:990, each= 602)  # 602 is the number of steps per simulations after the filter
###transform steps to days
datosFig_Espacio$X <- datosFig_Espacio$X*0.01
#remove the middle value of Iini and low value of g (not used)
datosFig_Espacio <- datosFig_Espacio %>%
filter(!(Iini==0.010)) %>%
#filter(g == 0.015)
filter(g== 0.056) ##SOLO PARA EL SUPLEMENTARIO
datosFig_Espacio$m[datosFig_Espacio$m == "0.001"] <- " Low diffusion rate" # le pongo un espacio de más para el orden final de la figura
datosFig_Espacio$m[datosFig_Espacio$m == "0.01"] <- "High diffusion rate"
serieTiempoGeneral3 <- datosFig_Espacio %>%
filter(!(m==0.1)) %>%
filter(!(m==0.005)) %>%
filter(!(m==0.05)) %>%
filter(Iini==0.1) %>%
filter(sim ==1 | sim==2) %>% # con esto solo agarro la primera del random. Ojala sea la shida
ggplot(aes(x=X))+
# geom_ribbon(aes(ymin = S_prom - S_sd, ymax = S_prom + S_sd), fill = "darkgreen", alpha=0.2) +
#  geom_line(aes(y = S_prom, linetype=as.factor(IresPro)), color="darkgreen") +
#geom_line(aes(x=X*0.01, y=S_prom), color="darkgreen") +
geom_line(aes(y=I_prom, linetype=as.factor(Iini)), color="darkred")+
geom_ribbon(aes(ymin = I_prom - I_sd, ymax = I_prom + I_sd, fill=as.factor(Iini)), alpha=0.3) +  ##o poner 0.05
# geom_point(aes(y = I_prom), size= 0.05, color= "darkred")+
#geom_segment(aes(x = 300, y =  0, xend = 300, yend =  0.8), color= "black", size= 0.25, linetype=2)+
facet_wrap(~patron*m, ncol = 4, labeller = label_wrap_gen(multi_line=TRUE)) +
theme_bw()+
#theme_grey()+
theme(text = element_text(size=15))+
theme(panel.spacing.y = unit(6, "lines"))+
theme(panel.spacing.x = unit(1, "lines"))+
theme(legend.position = "none")+
theme(strip.background = element_rect(color="white", fill="white", size=1.5))+
scale_fill_manual(values= mycols3a[2])+
labs(linetype= "I0", x= "Time (Days)", y= "Average tree infection (Infected leaves density)")
ggsave("~/Desktop/archivosTrabajandose_aborrar/articulo1_codigoFiguras/FiguraParcela/finales/serieTiempoSUPP3.png", height = 7, width = 10)
serieTiempoGeneral3
